{"version":3,"sources":["GuestComponent/Guest.js","GuestComponent/PendingGuest.js","GuestComponent/GuestsList.js","Header/Header.js","Main/ConfirmCounter.js","Main/Counter.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Guest","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","name","props","guest","handleConfirmed","id","handleEdit","changeName","e","setState","target","value","handleRemove","inherits","createClass","key","react_default","a","createElement","isEditing","type","onChange","checked","confirmed","onClick","Component","PendingGuest","className","GuestsList","GuestComponent_PendingGuest","pendingGuest","guests","filter","isFiltered","map","GuestComponent_Guest","Header","placeholder","handlePendingGuest","addGuest","ConfirmCounter","toggleFilter","Counter","attending","unconfirmed","total","Main","Main_ConfirmCounter","Main_Counter","App","getTotalInvited","getAttendingGuests","counter","getUnconfirmed","preventDefault","newGuest","toConsumableArray","src_Header_Header","src_Main_Main","GuestComponent_GuestsList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3eb17c05.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Guest extends Component {\r\n\r\n  state = {\r\n    name: this.props.guest.name\r\n  }\r\n\r\n  handleConfirmed = () => {\r\n      return(\r\n          this.props.handleConfirmed(this.props.guest.id)\r\n      )\r\n  }\r\n\r\n  handleEdit = () => {\r\n    this.props.handleEdit(this.props.guest.id, this.state.name)\r\n  }\r\n\r\n  changeName = (e) => {\r\n    this.setState({\r\n        name: e.target.value\r\n    })\r\n  }\r\n\r\n  handleRemove = () => {\r\n      this.props.handleRemove(this.props.guest.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <li>\r\n            {this.props.guest.isEditing? <input type=\"text\" value={this.state.name} onChange={this.changeName}/> : <span>{this.props.guest.name}</span> }\r\n            <label>\r\n            <input type=\"checkbox\" checked={this.props.guest.confirmed} onChange={this.handleConfirmed}/> Confirmed\r\n            </label>\r\n            <button onClick={this.handleEdit}>{this.props.guest.isEditing ? \"Save\" : \"Edit\"}</button>\r\n            <button onClick={this.handleRemove}>remove</button>\r\n        </li>\r\n    )\r\n  }\r\n}\r\n\r\nGuest.propTypes = {\r\n    guest: PropTypes.object\r\n};\r\n\r\nexport default Guest\r\n","import React, { Component } from 'react'\r\n\r\nexport class PendingGuest extends Component {\r\n\r\n  render() {\r\n    if(this.props.name){\r\n        return (\r\n            <li className=\"pending\">\r\n                <span>{this.props.name}</span>\r\n            </li>\r\n        )\r\n    }\r\n    return null\r\n  }\r\n}\r\n\r\nexport default PendingGuest\r\n","import React, { Component } from 'react'\r\nimport Guest from './Guest.js'\r\nimport PendingGuest from './PendingGuest.js'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GuestsList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n            <PendingGuest name={this.props.pendingGuest}/>\r\n            {this.props.guests\r\n              .filter((guest) => !this.props.isFiltered || guest.confirmed)\r\n              .map((guest)=>{\r\n                return(\r\n                    <Guest key={guest.id} guest={guest} handleConfirmed={this.props.handleConfirmed} handleEdit={this.props.handleEdit} handleRemove={this.props.handleRemove}/>\r\n                )\r\n            })}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nGuestsList.propTypes = {\r\n    guests: PropTypes.array\r\n};\r\n\r\nexport default GuestsList\r\n","import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>RSVP</h1>\r\n        <p>A Treehouse App</p>\r\n        <form>\r\n            <input type=\"text\" value={this.props.pendingGuest} placeholder=\"Invite Someone\" onChange={this.props.handlePendingGuest}/>\r\n            <button type=\"submit\" name=\"submit\" value=\"submit\" onClick={this.props.addGuest}>Submit</button>\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class ConfirmCounter extends Component {\r\n  render() {\r\n    return (\r\n      <label>\r\n        <input type=\"checkbox\" onChange={this.props.toggleFilter} checked={this.props.isFiltered}/> Hide those who haven't responded\r\n      </label>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConfirmCounter\r\n","import React, { Component } from 'react'\r\n\r\nexport class Counter extends Component {\r\n  render() {\r\n    return (\r\n      <table className=\"counter\">\r\n        <tbody>\r\n          <tr>\r\n            <td>Attending:</td>\r\n            <td>{this.props.attending}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Unconfirmed:</td>\r\n            <td>{this.props.unconfirmed}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Total:</td>\r\n            <td>{this.props.total}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\nimport ConfirmCounter from './ConfirmCounter.js'\r\nimport Counter from './Counter.js'\r\n\r\nexport class Main extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"main\">\r\n            <div>\r\n            <h2>Invitees</h2>\r\n            <ConfirmCounter isFiltered={this.props.isFiltered} toggleFilter={this.props.toggleFilter}/>\r\n            </div>\r\n            <Counter total={this.props.total} attending={this.props.attending} unconfirmed={this.props.unconfirmed}/>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport GuestsList from './GuestComponent/GuestsList.js'\nimport Header from './Header/Header.js'\nimport Main from './Main/Main.js'\n\nclass App extends Component {\n\n  state = {\n    isFiltered: false,\n    pendingGuest: \"\",\n    guests: [\n      {\n        id: 0,\n        name: \"John\",\n        confirmed: false,\n        isEditing: false\n      },\n      {\n        id: 1,\n        name: \"Alex\",\n        confirmed: true,\n        isEditing: false\n      },\n      {\n        id: 2,\n        name: \"Doe\",\n        confirmed: false,\n        isEditing: false\n      },\n    ]\n  }\n\n  getTotalInvited = () => {\n    return (\n      this.state.guests.length\n    )\n  }\n\n  getAttendingGuests = () => {\n    let counter = 0\n    this.state.guests.map((guest)=>{\n      if(guest.confirmed === true){\n        counter += 1\n      }\n      return counter\n    })\n    return (counter)\n  }\n  \n  getUnconfirmed = () => {\n    return (this.getTotalInvited() - this.getAttendingGuests())\n  }\n\n  handleConfirmed = (id) => {\n    this.setState({\n      guests: this.state.guests.map((guest) => {\n        if(guest.id === id){\n          guest.confirmed = !guest.confirmed\n        }\n        return guest\n      })\n    })\n  }\n\n  handleEdit = (id, name) => {\n    this.setState({\n      guests: this.state.guests.map((guest) => {\n        if(guest.id === id){\n          guest.isEditing = !guest.isEditing\n          guest.name = name\n        }\n        return guest\n      })\n    })\n  }\n\n  toggleFilter = () => {\n    this.setState({\n      isFiltered: !this.state.isFiltered\n    })\n  }\n\n  handlePendingGuest = (e) => {\n    this.setState({\n      pendingGuest: e.target.value\n    })\n  }\n\n  addGuest = (e) => {\n    e.preventDefault()\n    const newGuest = {\n      id: this.state.guests.length + 1,\n      name: this.state.pendingGuest,\n      confirmed: false,\n      isEditing: false\n    }\n    this.setState({\n      pendingGuest: \"\",\n      guests: [newGuest,...this.state.guests]\n    })\n  }\n\n  handleRemove = (id) => {\n    this.setState({\n      guests: this.state.guests.filter((guest) => \n        guest.id !== id\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header>\n          <h1>RSVP</h1>\n          <p>A Treehouse App</p>\n          <form>\n              <input type=\"text\" value={this.state.pendingGuest} placeholder=\"Invite Someone\" onChange={this.handlePendingGuest}/>\n              <button type=\"submit\" name=\"submit\" value=\"submit\" onClick={this.addGuest}>Submit</button>\n          </form>\n        </header> */}\n        <Header pendingGuest={this.state.pendingGuest} addGuest={this.addGuest} handlePendingGuest={this.handlePendingGuest}/>\n        {/* <div className=\"main\">\n          <div>\n            <h2>Invitees</h2>\n            <ConfirmCounter isFiltered={this.state.isFiltered} toggleFilter={this.toggleFilter}/>\n          </div>\n          <Counter total={this.getTotalInvited()} attending={this.getAttendingGuests()} unconfirmed={this.getUnconfirmed()}/>\n        </div> */}\n        <Main isFiltered={this.state.isFiltered} toggleFilter={this.toggleFilter} total={this.getTotalInvited()} attending={this.getAttendingGuests()} unconfirmed={this.getUnconfirmed()} />\n        <GuestsList guests={this.state.guests} pendingGuest={this.state.pendingGuest} isFiltered={this.state.isFiltered} handleConfirmed={this.handleConfirmed} handleEdit={this.handleEdit} changeName={this.changeName} handleRemove={this.handleRemove}/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}